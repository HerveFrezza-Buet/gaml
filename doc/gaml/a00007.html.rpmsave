<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.3.1"/>
<title>gaml-1.10: example-001-006-score.cpp</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">gaml-1.10
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li><a href="examples.html"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
</div><!-- top -->
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div class="header">
  <div class="headertitle">
<div class="title">example-001-006-score.cpp</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><span class="preprocessor">#include &lt;<a class="code" href="a00141.html">gaml.hpp</a>&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;iostream&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><span class="preprocessor">#include &lt;utility&gt;</span></div>
<div class="line"></div>
<div class="line"><span class="comment">// Let us deal with 1D data, that consists of two classes A and B. In</span></div>
<div class="line"><span class="comment">// each class, the data are tossed from a uniform range of</span></div>
<div class="line"><span class="comment">// values. Ranges for classes A and B slightly overlap. Each value is</span></div>
<div class="line"><span class="comment">// associated with label, that is also tossed uniformly in a range</span></div>
<div class="line"><span class="comment">// around some central value. The central value differs for A and B</span></div>
<div class="line"><span class="comment">// classes.</span></div>
<div class="line"></div>
<div class="line"><span class="keyword">typedef</span> <span class="keywordtype">double</span>            X;</div>
<div class="line"><span class="keyword">typedef</span> <span class="keywordtype">double</span>            Y;</div>
<div class="line"><span class="keyword">typedef</span> std::pair&lt;X,Y&gt;    Data;</div>
<div class="line"><span class="keyword">typedef</span> std::vector&lt;Data&gt; Basis;</div>
<div class="line"></div>
<div class="line">X input_of(<span class="keyword">const</span> Data&amp; d)  {<span class="keywordflow">return</span> d.first;}</div>
<div class="line">Y output_of(<span class="keyword">const</span> Data&amp; d) {<span class="keywordflow">return</span> d.second;}</div>
<div class="line"></div>
<div class="line"><span class="preprocessor">#define PROBA_A      0.3</span></div>
<div class="line"><span class="preprocessor"></span><span class="preprocessor">#define A_MIN        0.0</span></div>
<div class="line"><span class="preprocessor"></span><span class="preprocessor">#define A_MAX        0.6</span></div>
<div class="line"><span class="preprocessor"></span><span class="preprocessor">#define B_MIN        0.4</span></div>
<div class="line"><span class="preprocessor"></span><span class="preprocessor">#define B_MAX        1.0</span></div>
<div class="line"><span class="preprocessor"></span><span class="preprocessor">#define A_OUT_CENTER 0.0</span></div>
<div class="line"><span class="preprocessor"></span><span class="preprocessor">#define B_OUT_CENTER 1.0</span></div>
<div class="line"><span class="preprocessor"></span><span class="preprocessor">#define OUT_RADIUS   1.0</span></div>
<div class="line"><span class="preprocessor"></span></div>
<div class="line">Data sample() {</div>
<div class="line">  X xmin,xmax;</div>
<div class="line">  Y ymin,ymax;</div>
<div class="line"></div>
<div class="line">  <span class="keywordflow">if</span>(<a name="a0"></a><a class="code" href="a00182.html#a50561031870af4d865de65f89c677916">gaml::random::proba</a>(PROBA_A)) {</div>
<div class="line">    xmin = A_MIN;</div>
<div class="line">    xmax = A_MAX;</div>
<div class="line">    ymin = A_OUT_CENTER - OUT_RADIUS;</div>
<div class="line">    ymax = A_OUT_CENTER + OUT_RADIUS;</div>
<div class="line">  }</div>
<div class="line">  <span class="keywordflow">else</span> {</div>
<div class="line">    xmin = B_MIN;</div>
<div class="line">    xmax = B_MAX;</div>
<div class="line">    ymin = B_OUT_CENTER - OUT_RADIUS;</div>
<div class="line">    ymax = B_OUT_CENTER + OUT_RADIUS;</div>
<div class="line">  }</div>
<div class="line"></div>
<div class="line">  <span class="keywordflow">return</span> {<a name="a1"></a><a class="code" href="a00182.html#a63a869d5b9fe61b984623e3ecd99a033">gaml::random::uniform</a>(xmin,xmax),<a class="code" href="a00182.html#a63a869d5b9fe61b984623e3ecd99a033">gaml::random::uniform</a>(ymin,ymax)};</div>
<div class="line">}</div>
<div class="line"></div>
<div class="line"><span class="comment">// Let us use define a class which uses a score method as</span></div>
<div class="line"><span class="comment">// parameter. The score method is a template template... ok, let us</span></div>
<div class="line"><span class="comment">// read the example. A score is a template of the forme</span></div>
<div class="line"><span class="comment">// Score&lt;ITER,TEST,VALUE_OF&gt;, it has three type variables. The</span></div>
<div class="line"><span class="comment">// following Evaluator class is parametrized by the kind of score we</span></div>
<div class="line"><span class="comment">// intend to use for evaluation. </span></div>
<div class="line"></div>
<div class="line"><span class="keyword">template</span> &lt;<span class="keyword">template</span>&lt;<span class="keyword">typename</span>,<span class="keyword">typename</span>,<span class="keyword">typename</span>&gt; <span class="keyword">class </span>SCORE&gt;</div>
<div class="line"><span class="keyword">class </span>Evaluator {</div>
<div class="line"><span class="keyword">public</span>:</div>
<div class="line">  <span class="keyword">template</span>&lt;<span class="keyword">typename</span> DataIterator, <span class="keyword">typename</span> Test, <span class="keyword">typename</span> Valueof&gt; </div>
<div class="line">  <span class="keywordtype">double</span> compute_score(<span class="keyword">const</span> DataIterator&amp; begin, <span class="keyword">const</span> DataIterator&amp; end, <span class="keyword">const</span> Test&amp; test, <span class="keyword">const</span> Valueof&amp; value_of) {</div>
<div class="line">    SCORE&lt;DataIterator,Test,Valueof&gt; score;</div>
<div class="line">    <span class="keywordflow">return</span> score(begin,end,test,value_of);</div>
<div class="line">  }</div>
<div class="line">};</div>
<div class="line"></div>
<div class="line"><span class="keywordtype">int</span> main(<span class="keywordtype">int</span> argc, <span class="keywordtype">char</span>* argv[]) {</div>
<div class="line">  Basis basis(100000);</div>
<div class="line">  <span class="keywordflow">for</span>(<span class="keyword">auto</span>&amp; data : basis) data = sample();</div>
<div class="line"></div>
<div class="line">  <span class="comment">// Let us use the relative variance reduction score. It scores a</span></div>
<div class="line">  <span class="comment">// splitting of the data basis, according to a test. Here, the</span></div>
<div class="line">  <span class="comment">// thread is a threshold according to x.</span></div>
<div class="line">  <span class="keyword">auto</span> test = [](<span class="keyword">const</span> Data&amp; d) -&gt; <span class="keywordtype">bool</span> {<span class="keywordflow">return</span> d.first &lt; .5*(A_MAX+B_MIN);};</div>
<div class="line"></div>
<div class="line">  <span class="comment">// Let us set up an evaluator with the score class provided by gaml.</span></div>
<div class="line">  Evaluator&lt;gaml::score::RelativeVarianceReduction&gt; evaluator;</div>
<div class="line"></div>
<div class="line">  <span class="comment">// Now, we can compute...</span></div>
<div class="line">  std::cout &lt;&lt; std::endl</div>
<div class="line">            &lt;&lt; <span class="stringliteral">&quot;mean                            = &quot;</span> &lt;&lt; <a name="a2"></a><a class="code" href="a00170.html#a8196de5eb952adc1d0ff250d0b307a20">gaml::average</a> (basis.begin(),basis.end(),output_of) &lt;&lt; std::endl</div>
<div class="line">            &lt;&lt; <span class="stringliteral">&quot;variance                        = &quot;</span> &lt;&lt; <a name="a3"></a><a class="code" href="a00170.html#aed9339c3d0aee2527e03aed013a349a3">gaml::variance</a>(basis.begin(),basis.end(),output_of) &lt;&lt; std::endl</div>
<div class="line">            &lt;&lt; <span class="stringliteral">&quot;relative variance reduction (1) = &quot;</span> &lt;&lt; evaluator.compute_score(basis.begin(),basis.end(),test,output_of) &lt;&lt; std::endl</div>
<div class="line">            &lt;&lt; <span class="stringliteral">&quot;relative variance reduction (2) = &quot;</span> &lt;&lt; <a name="a4"></a><a class="code" href="a00185.html#a5908652b44e1f3b16b777bf10db082f7">gaml::score::relative_variance_reduction</a>(basis.begin(),basis.end(),test,output_of) &lt;&lt; std::endl <span class="comment">// the same as previous...</span></div>
<div class="line">            &lt;&lt; std::endl;</div>
<div class="line"></div>
<div class="line">  <span class="keywordflow">return</span> 0;</div>
<div class="line">}</div>
</div><!-- fragment --> </div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.3.1
</small></address>
</body>
</html>
