<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.3.1"/>
<title>gaml-1.10: gamlTabular.hpp Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { searchBox.OnSelectItem(0); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td style="padding-left: 0.5em;">
   <div id="projectname">gaml-1.10
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.3.1 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li><a href="examples.html"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&#160;List</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&#160;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&#160;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&#160;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&#160;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&#160;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&#160;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&#160;</span>Typedefs</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&#160;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&#160;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(9)"><span class="SelectionMark">&#160;</span>Friends</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_68267d1309a1af8e8297ef4c3efbcdba.html">src</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">gamlTabular.hpp</div>  </div>
</div><!--header-->
<div class="contents">
<a href="a00166.html">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#pragma once</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor"></span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">/*</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> *   Copyright (C) 2012,  Supelec</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> *   Author : Hervé Frezza-Buet, Frédéric Pennerath </span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment"> *   Contributor :</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"> *   This library is free software; you can redistribute it and/or</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment"> *   modify it under the terms of the GNU General Public</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment"> *   License (GPL) as published by the Free Software Foundation; either</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"> *   version 3 of the License, or any later version.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"> *   </span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment"> *   This library is distributed in the hope that it will be useful,</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"> *   but WITHOUT ANY WARRANTY; without even the implied warranty of</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"> *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment"> *   General Public License for more details.</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment"> *   </span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment"> *   You should have received a copy of the GNU General Public</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment"> *   License along with this library; if not, write to the Free Software</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment"> *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment"> *   Contact : herve.frezza-buet@supelec.fr, frederic.pennerath@supelec.fr</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment"> *</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment"> */</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;iterator&gt;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="a00168.html">gamlVirtual.hpp</a>&gt;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="keyword">namespace </span>gaml {</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;  <span class="keyword">template</span>&lt;<span class="keyword">typename</span> Iterator, <span class="keyword">typename</span> IndexIterator&gt;</div>
<div class="line"><a name="l00035"></a><span class="lineno"><a class="code" href="a00131.html">   35</a></span>&#160;  <span class="keyword">class </span><a class="code" href="a00131.html">TabularIterator</a> </div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;    : <span class="keyword">public</span> <a class="code" href="a00023.html">gaml::virtualized::base_iterator</a>&lt;typename std::random_access_iterator_tag, </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;                                              typename std::iterator_traits&lt;Iterator&gt;::value_type&gt; {</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;  <span class="keyword">private</span>:</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;    Iterator it;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;    <span class="keyword">mutable</span> Iterator iit;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;    IndexIterator idx;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;  <span class="keyword">public</span>:</div>
<div class="line"><a name="l00045"></a><span class="lineno"><a class="code" href="a00131.html#a7d144952151a593ff97278814d3819dc">   45</a></span>&#160;    <span class="keyword">typedef</span> <span class="keyword">typename</span> std::iterator_traits&lt;Iterator&gt;::value_type      <a class="code" href="a00131.html#a7d144952151a593ff97278814d3819dc">value_type</a>;</div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="code" href="a00131.html#ae9162e6919589b6bba3169a69999745d">   46</a></span>&#160;    <span class="keyword">typedef</span> <span class="keyword">typename</span> std::iterator_traits&lt;Iterator&gt;::difference_type <a class="code" href="a00131.html#ae9162e6919589b6bba3169a69999745d">difference_type</a>;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;</div>
<div class="line"><a name="l00048"></a><span class="lineno"><a class="code" href="a00131.html#aa8bfdca710aafd01adeb27f39dfc2c0a">   48</a></span>&#160;    <a class="code" href="a00131.html#aa8bfdca710aafd01adeb27f39dfc2c0a">TabularIterator</a>(<span class="keywordtype">void</span>) : it(), idx() {}</div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="code" href="a00131.html#a4bb6bcc08c141acacfa930e0032c6eca">   49</a></span>&#160;    <a class="code" href="a00131.html#aa8bfdca710aafd01adeb27f39dfc2c0a">TabularIterator</a>(<span class="keyword">const</span> Iterator&amp; iter, <span class="keyword">const</span> IndexIterator&amp; index_iter) </div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;      : it(iter), idx(index_iter) {}</div>
<div class="line"><a name="l00051"></a><span class="lineno"><a class="code" href="a00131.html#a95fda7a895d5ec48b9eaa289a003bc53">   51</a></span>&#160;    <a class="code" href="a00131.html#a95fda7a895d5ec48b9eaa289a003bc53">TabularIterator</a>(<span class="keyword">const</span> <a class="code" href="a00131.html">TabularIterator</a>&amp; cp) : it(cp.it), idx(cp.idx) {}</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;</div>
<div class="line"><a name="l00053"></a><span class="lineno"><a class="code" href="a00131.html#ac606276393d986948b22e6d9dd44f74f">   53</a></span>&#160;    <a class="code" href="a00131.html">TabularIterator</a>&amp; <a class="code" href="a00131.html#ac606276393d986948b22e6d9dd44f74f">operator=</a>(<span class="keyword">const</span> <a class="code" href="a00131.html">TabularIterator</a>&amp; cp)   {</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;      <span class="keywordflow">if</span>(<span class="keyword">this</span> != &amp;cp) {</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;        it  = cp.it;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;        idx = cp.idx;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;      }</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;      <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;    }</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div>
<div class="line"><a name="l00061"></a><span class="lineno"><a class="code" href="a00131.html#aabb0dd06c3911e3e0903e8514d7b56ca">   61</a></span>&#160;    <a class="code" href="a00131.html">TabularIterator</a>&amp; <a class="code" href="a00131.html#aabb0dd06c3911e3e0903e8514d7b56ca">operator++</a>()                       {++idx; <span class="keywordflow">return</span> *<span class="keyword">this</span>;}</div>
<div class="line"><a name="l00062"></a><span class="lineno"><a class="code" href="a00131.html#a2d9cd3b9d41fa13d978361206a2cc8a9">   62</a></span>&#160;    <a class="code" href="a00131.html">TabularIterator</a>&amp; <a class="code" href="a00131.html#a2d9cd3b9d41fa13d978361206a2cc8a9">operator--</a>()                       {--idx; <span class="keywordflow">return</span> *<span class="keyword">this</span>;}</div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="code" href="a00131.html#ae03d3c3a286bb9675c1ce0707946a064">   63</a></span>&#160;    <a class="code" href="a00131.html">TabularIterator</a>&amp; <a class="code" href="a00131.html#ae03d3c3a286bb9675c1ce0707946a064">operator+=</a>(<a class="code" href="a00131.html#ae9162e6919589b6bba3169a69999745d">difference_type</a> diff)   {idx+=diff; <span class="keywordflow">return</span> *<span class="keyword">this</span>;}</div>
<div class="line"><a name="l00064"></a><span class="lineno"><a class="code" href="a00131.html#aac5cc9d116cbac70d7d1ae31bfc2b19b">   64</a></span>&#160;    <a class="code" href="a00131.html">TabularIterator</a>&amp; <a class="code" href="a00131.html#aac5cc9d116cbac70d7d1ae31bfc2b19b">operator-=</a>(<span class="keywordtype">int</span> diff)               {idx-=diff; <span class="keywordflow">return</span> *<span class="keyword">this</span>;}</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;</div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="code" href="a00131.html#a55767ba1f37219dd941872f820ac6bd4">   66</a></span>&#160;    <a class="code" href="a00131.html">TabularIterator</a>  <a class="code" href="a00131.html#a55767ba1f37219dd941872f820ac6bd4">operator++</a>(<span class="keywordtype">int</span>) {</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;      <a class="code" href="a00131.html">TabularIterator</a> res = *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;      ++*<span class="keyword">this</span>; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;      <span class="keywordflow">return</span> res;</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;    }</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;</div>
<div class="line"><a name="l00072"></a><span class="lineno"><a class="code" href="a00131.html#a0d8f96534404b54b9e5506b2168b9a2a">   72</a></span>&#160;    <a class="code" href="a00131.html">TabularIterator</a>  <a class="code" href="a00131.html#a0d8f96534404b54b9e5506b2168b9a2a">operator--</a>(<span class="keywordtype">int</span>) {</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;      <a class="code" href="a00131.html">TabularIterator</a> res = *<span class="keyword">this</span>; </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;      --*<span class="keyword">this</span>; </div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;      <span class="keywordflow">return</span> res;</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;    }</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;</div>
<div class="line"><a name="l00078"></a><span class="lineno"><a class="code" href="a00131.html#ae132c9f50a3b60ccf846a3edc626a9a1">   78</a></span>&#160;    <a class="code" href="a00131.html#ae9162e6919589b6bba3169a69999745d">difference_type</a>  <a class="code" href="a00131.html#ae132c9f50a3b60ccf846a3edc626a9a1">operator-</a>(<span class="keyword">const</span> <a class="code" href="a00131.html">TabularIterator</a>&amp; i)<span class="keyword"> const </span>{<span class="keywordflow">return</span> idx - i.idx;}</div>
<div class="line"><a name="l00079"></a><span class="lineno"><a class="code" href="a00131.html#ac0fb6724a829274dc07fc11d6e6b0623">   79</a></span>&#160;    <a class="code" href="a00131.html">TabularIterator</a>  <a class="code" href="a00131.html#ac0fb6724a829274dc07fc11d6e6b0623">operator+</a>(<a class="code" href="a00131.html#ae9162e6919589b6bba3169a69999745d">difference_type</a> i)<span class="keyword">        const </span>{<span class="keywordflow">return</span> <a class="code" href="a00131.html#aa8bfdca710aafd01adeb27f39dfc2c0a">TabularIterator</a>(it,idx+i);}</div>
<div class="line"><a name="l00080"></a><span class="lineno"><a class="code" href="a00131.html#a5c35aa09fb0ff3c5324ec3c7f943f62d">   80</a></span>&#160;    <a class="code" href="a00131.html">TabularIterator</a>  <a class="code" href="a00131.html#a5c35aa09fb0ff3c5324ec3c7f943f62d">operator-</a>(<a class="code" href="a00131.html#ae9162e6919589b6bba3169a69999745d">difference_type</a> i)<span class="keyword">        const </span>{<span class="keywordflow">return</span> <a class="code" href="a00131.html#aa8bfdca710aafd01adeb27f39dfc2c0a">TabularIterator</a>(it,idx-i);}</div>
<div class="line"><a name="l00081"></a><span class="lineno"><a class="code" href="a00131.html#a2dbde880f1199dcb63e2b0588c08b6d8">   81</a></span>&#160;    <span class="keyword">auto</span> <a class="code" href="a00131.html#a2dbde880f1199dcb63e2b0588c08b6d8">operator*</a>(<span class="keywordtype">void</span>) const -&gt; decltype(*it) {</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;      iit = it;</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;      std::advance(iit,(<a class="code" href="a00131.html#ae9162e6919589b6bba3169a69999745d">difference_type</a>)(*idx));</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;      <span class="keywordflow">return</span> *iit;</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;    }</div>
<div class="line"><a name="l00086"></a><span class="lineno"><a class="code" href="a00131.html#a9345911ee22ceb1594c9409f50328916">   86</a></span>&#160;    <span class="keywordtype">bool</span>     <a class="code" href="a00131.html#a9345911ee22ceb1594c9409f50328916">operator==</a>(<span class="keyword">const</span> <a class="code" href="a00131.html">TabularIterator</a>&amp; i)<span class="keyword">        const </span>{<span class="keywordflow">return</span> it == i.it &amp;&amp; idx == i.idx;}</div>
<div class="line"><a name="l00087"></a><span class="lineno"><a class="code" href="a00131.html#a5940d5e0c0c3c96d1b913c0745d81f31">   87</a></span>&#160;    <span class="keywordtype">bool</span>     <a class="code" href="a00131.html#a5940d5e0c0c3c96d1b913c0745d81f31">operator!=</a>(<span class="keyword">const</span> <a class="code" href="a00131.html">TabularIterator</a>&amp; i)<span class="keyword">        const </span>{<span class="keywordflow">return</span> it != i.it || idx != i.idx;}</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;   </div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;    <span class="comment">// Virtualization</span></div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;    <span class="keyword">typedef</span> <a class="code" href="a00023.html">gaml::virtualized::base_iterator</a>&lt;<span class="keyword">typename</span> std::random_access_iterator_tag, </div>
<div class="line"><a name="l00092"></a><span class="lineno"><a class="code" href="a00131.html#a1e70f2574e0dd88f56a1277a389cce46">   92</a></span>&#160;                                             <span class="keyword">typename</span> std::iterator_traits&lt;Iterator&gt;::value_type&gt; <a class="code" href="a00131.html#a1e70f2574e0dd88f56a1277a389cce46">base_type</a>;</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;    </div>
<div class="line"><a name="l00094"></a><span class="lineno"><a class="code" href="a00131.html#add7f8cb47140ed052a8846dc627b652b">   94</a></span>&#160;    <span class="keyword">virtual</span> <a class="code" href="a00023.html">base_type</a>* <a class="code" href="a00131.html#add7f8cb47140ed052a8846dc627b652b">clone</a>()<span class="keyword"> const </span>{</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;      <span class="keywordflow">return</span> <span class="keyword">new</span> <a class="code" href="a00131.html">TabularIterator&lt;Iterator,IndexIterator&gt;</a>(*this);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;    }</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div>
<div class="line"><a name="l00098"></a><span class="lineno"><a class="code" href="a00131.html#abe53d0559b557fd36ae0d933d3eecf12">   98</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="a00131.html#abe53d0559b557fd36ae0d933d3eecf12">increment</a>(<span class="keywordtype">void</span>) {</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;      ++(*this);</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;    }</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div>
<div class="line"><a name="l00102"></a><span class="lineno"><a class="code" href="a00131.html#a5c78f7e44eb945c8c1fe04917177d9ed">  102</a></span>&#160;    <span class="keyword">virtual</span> <span class="keyword">const</span> <a class="code" href="a00131.html#a7d144952151a593ff97278814d3819dc">value_type</a>&amp; <span class="keyword">get</span>() <span class="keyword">const</span> {</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;      <span class="keywordflow">return</span> *(*this);</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;    }</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;</div>
<div class="line"><a name="l00106"></a><span class="lineno"><a class="code" href="a00131.html#aa8d7ed7292e246a098c1e20e4efa571c">  106</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="a00131.html#aa8d7ed7292e246a098c1e20e4efa571c">is_equal</a>(<span class="keyword">const</span> <a class="code" href="a00023.html">base_type</a>&amp; other)<span class="keyword"> const </span>{</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;      <span class="keyword">auto</span> p_iter = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span><a class="code" href="a00131.html">TabularIterator&lt;Iterator,IndexIterator&gt;</a>*<span class="keyword">&gt;</span>(&amp;other);</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;      <span class="keywordflow">return</span> (*<span class="keyword">this</span>) == (*p_iter);</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;    }</div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;</div>
<div class="line"><a name="l00111"></a><span class="lineno"><a class="code" href="a00131.html#a9bc8f9e60105d1ecc201aa3551448f5e">  111</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="a00131.html#a9bc8f9e60105d1ecc201aa3551448f5e">decrement</a>(<span class="keywordtype">void</span>) {</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;      --(*this);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;    }</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;</div>
<div class="line"><a name="l00115"></a><span class="lineno"><a class="code" href="a00131.html#a841ba2a299f79edf6511aa55269fae44">  115</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="a00131.html#a841ba2a299f79edf6511aa55269fae44">increment</a>(<span class="keyword">typename</span> <a class="code" href="a00023.html#afa888796974267edc9846f7713aec79b">base_type::difference_type</a> i) {</div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;      (*this) += i;</div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;    }</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;</div>
<div class="line"><a name="l00119"></a><span class="lineno"><a class="code" href="a00131.html#a8d889664c0ad1c7d7dd0909d766964f5">  119</a></span>&#160;    <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="a00131.html#a8d889664c0ad1c7d7dd0909d766964f5">decrement</a>(<span class="keyword">typename</span> <a class="code" href="a00023.html#afa888796974267edc9846f7713aec79b">base_type::difference_type</a> i) {</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160;      (*this) -= i;</div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;    }</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div>
<div class="line"><a name="l00123"></a><span class="lineno"><a class="code" href="a00131.html#a2a599259c5d53c931a4c45f134760a3d">  123</a></span>&#160;    <span class="keyword">virtual</span> <span class="keyword">typename</span> <a class="code" href="a00023.html#afa888796974267edc9846f7713aec79b">base_type::difference_type</a> <a class="code" href="a00131.html#a2a599259c5d53c931a4c45f134760a3d">distance</a>(<span class="keyword">const</span> <a class="code" href="a00023.html">base_type</a>&amp; other) {</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;      <span class="keyword">auto</span> p_iter = <span class="keyword">reinterpret_cast&lt;</span><span class="keyword">const </span><a class="code" href="a00131.html">TabularIterator&lt;Iterator,IndexIterator&gt;</a>*<span class="keyword">&gt;</span>(&amp;other);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;      <span class="keywordflow">return</span> std::distance(*<span class="keyword">this</span>,*p_iter);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;    }</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;  };</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;  <span class="keyword">template</span>&lt;<span class="keyword">typename</span> Iterator&gt; </div>
<div class="line"><a name="l00131"></a><span class="lineno"><a class="code" href="a00130.html">  131</a></span>&#160;  <span class="keyword">class </span><a class="code" href="a00130.html">Tabular</a> {</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;  <span class="keyword">public</span>:</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;</div>
<div class="line"><a name="l00134"></a><span class="lineno"><a class="code" href="a00130.html#a2f58297a9ffde3f00d3d5b0d24091818">  134</a></span>&#160;    <span class="keyword">typedef</span> std::vector&lt;unsigned int&gt; <a class="code" href="a00130.html#a2f58297a9ffde3f00d3d5b0d24091818">indices_type</a>;</div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;</div>
<div class="line"><a name="l00136"></a><span class="lineno"><a class="code" href="a00130.html#ad1763019410017dc00661e8f9e47145a">  136</a></span>&#160;    Iterator <a class="code" href="a00130.html#ad1763019410017dc00661e8f9e47145a">_begin</a>;</div>
<div class="line"><a name="l00137"></a><span class="lineno"><a class="code" href="a00130.html#a5c88c41784ce2246af10ca61a02cb277">  137</a></span>&#160;    <a class="code" href="a00130.html#a2f58297a9ffde3f00d3d5b0d24091818">indices_type</a> <a class="code" href="a00130.html#a5c88c41784ce2246af10ca61a02cb277">indices</a>;</div>
<div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div>
<div class="line"><a name="l00140"></a><span class="lineno"><a class="code" href="a00130.html#ac07753fc3429e0a256dae9b44b09ba35">  140</a></span>&#160;    <span class="keyword">typedef</span> <span class="keyword">typename</span> std::iterator_traits&lt;Iterator&gt;::value_type <a class="code" href="a00130.html#ac07753fc3429e0a256dae9b44b09ba35">value_type</a>;</div>
<div class="line"><a name="l00141"></a><span class="lineno"><a class="code" href="a00130.html#a6263cd6cac27d9b6c81508d3f29521e3">  141</a></span>&#160;    <span class="keyword">typedef</span> <a class="code" href="a00131.html">TabularIterator&lt;Iterator,typename indices_type::iterator&gt;</a> <a class="code" href="a00130.html#a6263cd6cac27d9b6c81508d3f29521e3">iterator</a>;</div>
<div class="line"><a name="l00142"></a><span class="lineno">  142</span>&#160;    </div>
<div class="line"><a name="l00143"></a><span class="lineno"><a class="code" href="a00130.html#a0af0bf06a8371ee3836878882f381a2f">  143</a></span>&#160;    <a class="code" href="a00130.html#af6de634afaa653fda1f3de8a1a1cb7e4">Tabular</a>(<span class="keyword">const</span> Iterator&amp; begin_iter) : </div>
<div class="line"><a name="l00144"></a><span class="lineno">  144</span>&#160;      <a class="code" href="a00130.html#ad1763019410017dc00661e8f9e47145a">_begin</a>(begin_iter), <a class="code" href="a00130.html#a5c88c41784ce2246af10ca61a02cb277">indices</a>() {</div>
<div class="line"><a name="l00145"></a><span class="lineno">  145</span>&#160;    }</div>
<div class="line"><a name="l00146"></a><span class="lineno">  146</span>&#160;</div>
<div class="line"><a name="l00147"></a><span class="lineno"><a class="code" href="a00130.html#af6de634afaa653fda1f3de8a1a1cb7e4">  147</a></span>&#160;    <a class="code" href="a00130.html#af6de634afaa653fda1f3de8a1a1cb7e4">Tabular</a>() : </div>
<div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;      <a class="code" href="a00130.html#ad1763019410017dc00661e8f9e47145a">_begin</a>(), <a class="code" href="a00130.html#a5c88c41784ce2246af10ca61a02cb277">indices</a>() {</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160;    }</div>
<div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;    </div>
<div class="line"><a name="l00151"></a><span class="lineno"><a class="code" href="a00130.html#a8546d8ade19a73823fd4a15e9be05579">  151</a></span>&#160;    <a class="code" href="a00130.html#a8546d8ade19a73823fd4a15e9be05579">Tabular</a>(<span class="keyword">const</span> <a class="code" href="a00130.html">Tabular</a>&amp; cp) : <a class="code" href="a00130.html#ad1763019410017dc00661e8f9e47145a">_begin</a>(cp.<a class="code" href="a00130.html#ad1763019410017dc00661e8f9e47145a">_begin</a>), <a class="code" href="a00130.html#a5c88c41784ce2246af10ca61a02cb277">indices</a>(cp.<a class="code" href="a00130.html#a5c88c41784ce2246af10ca61a02cb277">indices</a>) {}</div>
<div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;</div>
<div class="line"><a name="l00153"></a><span class="lineno"><a class="code" href="a00130.html#aa8fe46bc2466a337704705658c1f69ea">  153</a></span>&#160;    <span class="keyword">const</span> <a class="code" href="a00130.html">Tabular</a>&amp; <a class="code" href="a00130.html#aa8fe46bc2466a337704705658c1f69ea">operator=</a>(<span class="keyword">const</span> <a class="code" href="a00130.html">Tabular</a>&amp; cp) {</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160;      <span class="keywordflow">if</span>(&amp;cp != <span class="keyword">this</span>) {</div>
<div class="line"><a name="l00155"></a><span class="lineno">  155</span>&#160;        <a class="code" href="a00130.html#ad1763019410017dc00661e8f9e47145a">_begin</a>  = cp.<a class="code" href="a00130.html#ad1763019410017dc00661e8f9e47145a">_begin</a>;</div>
<div class="line"><a name="l00156"></a><span class="lineno">  156</span>&#160;        <a class="code" href="a00130.html#a5c88c41784ce2246af10ca61a02cb277">indices</a> = cp.<a class="code" href="a00130.html#a5c88c41784ce2246af10ca61a02cb277">indices</a>;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160;      }</div>
<div class="line"><a name="l00158"></a><span class="lineno">  158</span>&#160;      <span class="keywordflow">return</span> *<span class="keyword">this</span>;</div>
<div class="line"><a name="l00159"></a><span class="lineno">  159</span>&#160;    }</div>
<div class="line"><a name="l00160"></a><span class="lineno">  160</span>&#160;    </div>
<div class="line"><a name="l00161"></a><span class="lineno"><a class="code" href="a00130.html#a64d5319d81845e38aa1a9581818f6d18">  161</a></span>&#160;    <a class="code" href="a00131.html">iterator</a> <a class="code" href="a00130.html#a64d5319d81845e38aa1a9581818f6d18">begin</a>() {<span class="keywordflow">return</span> <a class="code" href="a00131.html">TabularIterator&lt;Iterator,typename indices_type::iterator&gt;</a>(<a class="code" href="a00130.html#ad1763019410017dc00661e8f9e47145a">_begin</a>, <a class="code" href="a00130.html#a5c88c41784ce2246af10ca61a02cb277">indices</a>.begin()); }</div>
<div class="line"><a name="l00162"></a><span class="lineno"><a class="code" href="a00130.html#a8eeb0a53ef751d8f5a05f38b3f81a96f">  162</a></span>&#160;    <a class="code" href="a00131.html">iterator</a> <a class="code" href="a00130.html#a8eeb0a53ef751d8f5a05f38b3f81a96f">end</a>()   {<span class="keywordflow">return</span> <a class="code" href="a00131.html">TabularIterator&lt;Iterator,typename indices_type::iterator&gt;</a>(<a class="code" href="a00130.html#ad1763019410017dc00661e8f9e47145a">_begin</a>, <a class="code" href="a00130.html#a5c88c41784ce2246af10ca61a02cb277">indices</a>.end()); }</div>
<div class="line"><a name="l00163"></a><span class="lineno">  163</span>&#160;  };</div>
<div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;}</div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by &#160;<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/>
</a> 1.8.3.1
</small></address>
</body>
</html>
